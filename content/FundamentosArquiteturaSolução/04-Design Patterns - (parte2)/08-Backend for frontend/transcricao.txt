Bom pessoal, agora nós vamos falar de um pattern muito importante e que chamamos de BFF. Não significa Best Friend Forever, significa Backend for Frontend. Para que serve isso? A ideia do Backend for Frontend é o seguinte: você cria um Backend que vai servir o seu Frontend, mas esse Backend traz somente informações que o seu Frontend vai precisar e vai utilizar. Como assim? Por que disso? Vamos imaginar que você vai acessar o YouTube do seu desktop. Quando você acessar, você vai perceber que vai mostrar as recomendações, vai aparecer outros vídeos para seguir, playlists dos canais que você está inscrito e um monte de informações. Agora, se você for acessado do seu celular, com certeza você não precisa de todas essas informações. Concorda comigo? Porque você não vai mostrar tudo de uma vez ali no seu celular. E, como você está utilizando essa informação no celular, às vezes, você pode estar em uma zona 3G, 4G que está super lento e você vai ter que trafegar um monte de dados que não faz sentido trafegar. Então, o que você faz? Cria um Backend específico só para o seu celular, para ele trazer informações somente que façam sentido para aquele device. Agora, quando você acessar via desktop, aquele Backend vai trazer exatamente as informações para aquele tipo de desktop. Logo, você vai perceber que você não vai trazer mais informações do que precisa e também não vai trazer menos informações daquilo que você precisa. Assim, imagina que o Backend for Frontend, no final do dia, é uma aplicação que faz consultas internas para os seus serviços. Aqueles seus serviços, eventualmente, podem até trazer informação demais para aquele Backend, mas o Backend só retorna as informações necessárias para aquele tipo de device que ele está trabalhando. Legal?

 

Portanto, essa é uma ideia básica do Backend for Frontend e isso é muito utilizado. Uma coisa bem interessante aqui que eu queria fazer um adendo é o seguinte: existem duas situações que muita gente utiliza o Backend for Frontend, uma informação e um tipo de abordagem, inclusive, pode ser o GraphQL, porque o Frontend pode fazer essas requisições no seu Endpoint GraphQL e ele escolhe quais as informações que aquele endpoint vai trazer. Então, isso, de forma geral, você está meio que utilizando o conceito de Backend for Frontend, porque o seu Frontend está somente pegando as informações que fazem sentido para ele. Eu estou dizendo que GraphQL é Backend for Frontend? Não! Mas ele consegue ter a mesma ideia. Outra coisa super interessante em relação a Backend for Frontend são as abordagens que você acaba tendo, como um Next.js, por exemplo. O Next.js gera estaticamente as páginas que você precisa, etc. Mas, ele tem por baixo dos panos, um node rodando e esse node, eventualmente, pode ser o cara que recebe as informações e retorna essas informações que façam sentido apenas para aquele Frontend que está sendo gerado. Então, dá para você brincar muito com essa ideia aí. Mas, de uma forma geral, se for pensar de forma clara, a ideia é: eu tenho um Backend que foi feito especificamente para retornar dados para um tipo de Frontend em específico. Beleza? Essa é a ideia do famoso BFF.