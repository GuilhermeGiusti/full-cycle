E para a gente finalizar este capítulo, olha só que interessante. A gente falou sobre o AWS Well-Architected. Mas isso a gente está falando de uma nuvem, que é a AWS. Todos os cloud providers têm frameworks ou princípios que são, inclusive, muito parecidos com os que a AWS tem. Eu vou dar um exemplo para vocês sobre 10 princípios de design para aplicações na Microsoft Azure. Inclusive, o link está aqui embaixo para você ver. E você vai perceber que esses princípios lembram muito os princípios que a gente está falando na AWS Well-Architected. Então, vamos pensar nesses princípios. Princípio número 1, design for self-healing, o que significa? Você vai desenhar sua aplicação para que ela possa se auto curar, o seu ambiente possa se auto curar. A gente falou disso. Outro ponto, deixe as coisas redundantes. A gente falou na AWS, fique global em minutos. Deixar as coisas redundantes são muito importantes. Você consegue criar líder em followers de banco de dados. Você consegue trabalhar em diferentes availability zones. Você consegue manter as suas coisas funcionando caso uma caia. Você tem outras coisas rodando do outro lado. Você tem confiabilidade. Então, olha só que ponto importante. Outro ponto, minimize a coordenação. Ou seja, quanto menos você tiver que ficar colocando a mão para operar o negócio, vai ser muito melhor. E você só consegue fazer isso automatizando as coisas. E também usando os serviços corretos e normalmente de forma gerenciada. A gente já vai falar de serviço gerenciado aqui. Outro ponto, desenhe para escalar. Ou seja, cria sua arquitetura de uma forma que ela vai poder escalar para manter toda sua carga de trabalho funcionando e principalmente trazendo resultados para a empresa. Outro ponto, particionamento, é isso mesmo. Separe os seus centros de custo, consiga entender o que você está gastando, o que você está separando por cada tipo de projeto, por exemplo. Outro ponto, design for operations. Ou seja, crie formas de que você vai conseguir operar no dia a dia. Tudo em automações, baseado em observabilidade. Ou seja, essas coisas têm que ser feitas de forma intencional. Outro ponto, use serviços gerenciados. Usando serviços gerenciados, você tem menos mão na massa. Você consegue ter menos problemas do que você teria, porque você vai ter, nesse caso aqui, a Azure por “trás dos panos” gerenciando. A gente sabe que tem essa pegada de custo, mas de forma geral, quanto mais serviço gerenciado você tem, menos chance de dar coisa errada vai ter. Use o melhor data storage para o melhor trabalho. Você tem diversos tipos de bancos de dados, você tem diversas formas de armazenar arquivos. No Azure você tem blob storage. Você tem outros tipos de bancos de dados. Normalmente esses bancos de dados, esses tipos de coisa, normalmente se equivalem a alguns outros serviços da AWS, por exemplo. Design for Evolution, ou seja, desenhe para que você consiga ter uma evolução ao longo do tempo.

Então a gente foi para 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 itens  que você pode utilizar como princípios para você desenhar a sua arquitetura. Use sempre uma checklist dessa. Microsoft, a Oracle, a Google, a AWS e outras empresas são muito robustas e elas têm muitas boas práticas. Inclusive, os seus próprios arquitetos de solução, a maioria deles é treinado, baseado na própria documentação que é gerada, e muitas dessas documentações são públicas. São documentações que nós estamos lendo agora. Obviamente, eles têm muito documento interno, mas muitos desses princípios valem para quem é especialista, para quem trabalha na Microsoft, para quem trabalha na AWS, mas também para você que vai trabalhar com esses caras.

Espero que eu tenha conseguido dar uma visão geral. Pessoal, novamente, é um conteúdo denso? É. Tem fundamento? Tem. É importante? Muito. E um arquiteto de solução tem que saber essa parada. Você não quer ser arquiteto de solução? Não tem problema. Você tendo esse conhecimento, você não vai ser mais tão “inocente”. “Ah, eu vou colocar o meu cloud infinito, ah, o meu pod não vai cair, ah, minha máquina está rodando por tanto tempo, não vou me preocupar, ah, se cair eu não sei o que eu vou fazer”. Quando você tem esses pontos na sua cabeça, você vai começar a olhar o mundo de uma forma totalmente diferente. Você deixa de ser “inocente”. Normalmente, eu gosto de falar assim, você deixa de ser “inocente”. Lê esses documentos, te tira de um profissional que tem uma inocência, acreditando que tudo na nuvem há mil maravilhas, para um profissional sabendo que as coisas não são simples.  Não tem como resolver coisas altamente complexas com soluções muito simples. Não tem como! E é por conta disso que esses guias vão ajudar a mudar completamente a sua visão quando a gente está falando em arquitetura de solução.É isso!