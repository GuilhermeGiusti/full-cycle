Bom, pessoal, vamos para o nosso próximo conceito, nosso próximo pilar é a parte de segurança. Esta parte toda de segurança não só é tão importante como também ela abrange segurança em diversas perspectivas, o que a gente precisa entender. Então, o pilar da segurança descreve como aproveitar as vantagens das tecnologias de nuvem para proteger dados, sistemas e ativos de uma forma que possa melhorar sua postura de segurança.

 Nesse caso, obviamente, a AWS está sempre enviesada, a gente tem que saber disso, partindo do princípio de que você está sempre utilizando a nuvem. E, na maioria das vezes, você realmente vai estar. Então, a primeira coisa que você tem que entender é o seguinte: quando a gente está falando em segurança, temos que conseguir garantir que os sistemas estão rodando, que os dados dali não estão vazando, e que os sistemas, além de estarem funcionando, não correm risco. Um risco grande, um risco iminente de gerar falta de disponibilidade. Segurança não é só o hacker chegar e invadir alguma coisa, segurança no final do dia é também você ter procedimentos para evitar qualquer coisa que vá conseguir deixar os dados ou os sistemas vulneráveis, não interessa qual vai ser essa perspectiva.

 Os principais princípios sobre segurança são que você implemente uma base de identity forte. O que isso significa? Dois aspectos tanto na cloud quanto fora da cloud, sendo mais local em relação aos sistemas. É o seguinte: toda vez que você começa a usar um cloud provider, você precisa ter o quê nesse aspecto? Credenciais, pessoas acessando, pessoas com diferentes níveis de autorização. O grande ponto é que normalmente o que a gente faz é criar usuários com muitas permissões e essas permissões vão dando acesso, por exemplo, a que um usuário possa fazer muita coisa. E, às vezes, o problema não é do seu funcionário que está trabalhando na empresa, o problema é que, às vezes, a conta desse funcionário é hackeada, não interessa o motivo e essa conta tem muito privilégio. Então, o que vai acontecer? Você tem que montar um esquema de autenticação e autorização no cloud provider. Cada cloud provider trabalha de uma forma super diferente, mas normalmente eles têm uma granularidade sobre quais as funções, quais são os papéis, as roles que cada usuário pode fazer. Tanto de usuários que vão ter acesso somente direto à API, quanto usuários que têm acesso a um determinado painel de controle. E essa estrutura vai ficar cada vez mais complexa conforme o tamanho da sua organização. Vamos imaginar que a sua organização tenha 10 mil funcionários na área de TI. Imagina o quão bem arquitetado tem que ser todos os procedimentos de identity para que todo mundo que acesse veja apenas aquilo que faça sentido para aquele nível de usuário. Então, você tem que conseguir criar grupos muito organizados. Você tem que criar toda uma estrutura realmente decente. E, obviamente, nunca utilizar a sua conta root, até o administrador que trabalha com essas coisas não vai usar a sua conta que tem permissão de tudo, isso nunca pode acontecer. 

Ainda sobre a identity, você vai perceber que além de você pensar nessa linha da infraestrutura de acesso, você também tem que conseguir a partir de sempre tentar enforçar que nos sistemas também, que rodam na sua rede, tenham um esquema de autenticação, autorização, processos de segurança que vão conseguir garantir que você tenha cada vez menos vazamentos. Muitas vezes a gente fica pensando que teremos vazamento e problema de segurança porque alguém de fora foi e invadiu, mas muitas vezes tudo isso acontece porque veio alguém de dentro. Então, isso é muito importante para você saber. Um outro ponto importantíssimo, tudo que você vai fazer você precisa ter rastreabilidade. Uma ação aconteceu, um servidor caiu, um problema aconteceu ou teve uma falha de segurança, alguém deletou algum bucket, alguém fez qualquer coisa desse tipo, a gente precisa ter uma forma totalmente ativada para conseguirmos ver o log de tudo que aconteceu. Lembrando, pessoal, log são eventos. E eventos aconteceram e qualquer tipo de evento deixa um rastro. E a rastreabilidade é exatamente isso, você consegue auditar o que está acontecendo caso alguma ação indesejada aconteça na sua aplicação.

 Então, vou começar ali com o Cloud. Vai ficar… Vou começar a organizar, como eu consigo organizar muito bem a autenticação e autorização de todo mundo. Como eu consigo rastrear caso alguma coisa aconteça. Você já sabe fazer isso? Aconteceu esse problema, eu sei chegar e rastrear essa coisa. Outro ponto, ative todos os layers de segurança. Layers de segurança podem ser desde a base de identity, desde a parte de autenticação, autenticação de dois fatores, todos esses tipos de coisa, até sua máquina rodando, a sua aplicação estando rodando, por exemplo, não estando pública totalmente, numa rede pública. O seu banco de dados nunca está também disponível para web, ou seja, cada vez que você cria uma subnet privada, cada vez que você evita que o usuário final, por exemplo, consiga chegar e rodar alguma coisa diretamente do lado de fora, a gente está falando que estamos deixando o usuário entrar em camadas cada vez mais profundas suas. Você tem que saber o que você quer expor, deixar exposto somente o que faz realmente sentido. Outro ponto importante também  é proteger os dados em trânsito e os armazenados. O que isso significa? Dados em trânsito, está acontecendo uma operação, como eu consigo proteger uma request chamando um banco de dados. O dado saindo do banco de dados, uma request chamando a outra, a request do cliente final entrando na sua aplicação. Como eu protejo os dados em trânsito? Existem diversas técnicas, desde você conseguir organizar suas sub redes, não deixando o dado que está chegando ter acesso direto à máquina. Fazendo esse dado bater sempre no balanceador de carga, que tenha políticas bem estritas, até você trabalhar com mTLS (TLS mútuo), que vai fazer com que todos os dados que estejam sendo trafegados na sua rede possam ser criptografados. Mas não só criptografados, esses dados rodam com mútuo TLS. Ou seja, o servidor A, para falar com o B tem que ter um certificado e o B, para falar com A, tem outro certificado. Um manda uma mensagem para o outro, vê que os dois certificados são válidos e, depois disso, eles começam a trafegar essas informações. “Nossa, Wesley, mas eu vou ter que armazenar certificado de tudo, de todos os meus workloads para eles falarem, não vai ser super complexo? E, por isso, que a gente tem aqueles padrões que a gente falou, por exemplo, no Service Mesh. Você consegue colocar um sidecar e esse sidecar vai, por exemplo, falar no formato de mútuo TLS e você resolve esse tipo de problema. E os dados que são armazenados, o que vai acontecer no final das contas? Os seus buckets, os seus bancos de dados, esses tipos de coisas não podem estar disponíveis diretamente na internet. Os seus buckets, hoje em dia, você tem muito bucket, os dados que sobem no S3, por exemplo, já ficam armazenados de forma criptografada se você automatizar, não, ativar esses tipos de opção. Os seus bancos de dados, por exemplo, nunca podem acessar diretamente… você tem que criar uma rede, esse cara você fala, você consegue proteger esse workload. Então todos os dados que são armazenados você tem que pensar: como esse dado está seguro. Os dados em trânsito e os dados armazenados.

 E uma das coisas que mais acontece no dia a dia, dados de banco de dados rolando dentro da empresa. Como assim? Ah, o desenvolvedor precisa fazer um teste porque está dando um problema e você fala assim, “cara, importa aquele banco de dados que está rolando mesmo só para gente conseguir simular o erro”. Esse é o maior problema que você pode encontrar na sua vida, porque o desenvolvedor não tem que ter acesso a dados de produção nunca. Nunca por conta de segurança mesmo, de confiabilidade naquele profissional, mas nunca também porque esse profissional pode fazer “besteira” com esse dado, pode enviar um e-mail sem querer para todo mundo. O desenvolvedor não pode ter dados perto dele, os dados reais, ninguém pode ficar manipulando, tem que ter políticas para acontecer isso. Vou dar um exemplo para você. Recentemente, alguém me contatou pelo LinkedIn falando para eu ignorar um e-mail que eu tinha recebido, porque esse e-mail tinha o banco de dados dos clientes da empresa dessa pessoa, e sem querer um desenvolvedor, na hora de mandar o banco de dados, o dump do banco de dados para o William, ele mandou para o Wesley e eu nem era da empresa dele. Esses tipos de erros não vêm porque é culpa do desenvolvedor mandar por engano. O problema é o desenvolvedor ter acesso a esse dado, quando não deveria ter acesso a esse dado. Pessoas junto com dados de produção cada vez mais podem dar problema, então assim, você tem que ter processos, pessoas que vão trabalhar diretamente com esses dados de uma forma mais cautelosa e com processos rodando. Isso é um ponto importante e prepare-se para eventos de segurança. Eventos de segurança, no final das contas, não é necessariamente você numa conferência, eventos de segurança é acontecer alguma coisa que envolve segurança na sua aplicação, no seu workload ou em qualquer coisa desse tipo. Você precisa estar preparado para conseguir agir. O que acontece se alguém hackear meu cluster? Eu consigo baixar meu cluster. Eu consigo subir de novo, eu consigo criar políticas para conseguir enforçar com que esses caras não vão conseguir ficar rodando mais esse tipo de informação. E novamente, deu problema, teve problema de segurança, vazamento de dados, qualquer coisa, vá até o fim, investigue, crie uma política para aquilo não acontecer novamente. Falei muito, mas segurança a gente sabe que é um assunto extremamente cabeludo. É um assunto extremamente importante, mas eu acho que a coisa legal de tudo isso é não você ser uma pessoa de segurança e conseguir fazer tudo isso, mas você ter ideia de tudo isso, para inclusive você chegar para essa pessoa de segurança e dar esses princípios para ele.