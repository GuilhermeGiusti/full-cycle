Bom, pessoal, depois que a gente passou dessa fase, desta introdução, onde a gente dá o escopo geral. Ou seja, a gente passa a visão geral do projeto, do escopo, dos pressupostos, das restrições. A gente vai dar a visão geral da arquitetura do projeto. Então, isso é um ponto importante. E novamente, quando eu falo visão geral da arquitetura, muita gente acaba pensando: “como assim visão geral da arquitetura? O que inclui e o que não inclui essa visão?” Eu tenho que descrever na arquitetura quais são os principais pontos que vão fazer diferença durante esse projeto. Então, esse tipo de coisa é importante. Por exemplo, o projeto vai ser um sistema assim, vai conter três módulos importantes. Esses três módulos vão utilizar um componente de banco de dados. Esse módulo vai conseguir falar uma coisa importante, que a gente vai utilizar uma gateway de pagamento X. Ao mesmo tempo, a gente vai precisar levar em conta pontos como concorrência. Então, a gente consegue dar um descritivo de coisas que a gente acha importante na hora que a gente trabalha. E para suportar esses pontos a gente cria um diagrama de alto nível, ou seja, quando eu consigo ver a solução como um todo se comportando. 

Os tipos de diagrama que a gente consegue utilizar é um ponto importante. A gente vai estudar obviamente depois no módulo de design docs e coisas desse tipo. Mas uma das coisas que são muito importantes, é recomendável que você consiga seguir uma padronização, para que todo mundo consiga entender os seus diagramas. Normalmente, diagrama é uma coisa muito “louca”, uma pessoa pega uma outra que é um cliente. Outra pessoa pega uma bolinha que é um cliente. A outra passa uma reta que é uma chamada síncrona, uma chamada simultânea que é a síncrona. Outra pega: “vou trabalhar em cima de UML, outro em cima de MDL e outro baseado em C4 e coisas desse tipo”. Minha opinião pessoal, durante esses últimos tempos, mais especificamente de um ano e meio mais ou menos, eu tenho estudado muito, muito, muito sobre diversos tipos de diagrama, documentação, formalizar mais soluções e coisas desse tipo. E Minha opinião pessoal é: uma das melhores formas de você conseguir fazer diagramação de alto nível é conseguindo entender mais sobre diagrama C4. A gente vai ver sobre isso no próximo módulo. Mas você tem quatro tipos de visões diferentes. Mas, assim, muita gente “demoniza” o UML. E o UML é algo fantástico. Então, você consegue diagramar da melhor forma que você conseguir encontrar, mas no final do dia, a diagramação serve para comunicar. Se está claro para quem for ler, melhor. Quanto mais você padroniza, mais fácil fica para todo mundo conseguir entender. Então, nos principais componentes, uma coisa é você conseguir ter o contexto. Mas você consegue entender componente por componente e como eles se relacionam? E depois a gente entra com diagramas de fluxo, ou seja, uma requisição bate aqui e acontece isso. Depois acontece isso. E se der certo vai para esse lado, se não der certo vai para aquele outro lado. Então, quando a gente vê esse diagrama geral da arquitetura, novamente, você vai mostrar o que importa. Tem muita gente que fica gerando documentos como se não houvesse amanhã. Imagina que o site tem uma área de FAQ que é uma página, e essa página da página, com pergunta e resposta, é um CRUD . E a pessoa cria um super documento para descrever um CRUD de pergunta e resposta numa FAQ. Eu estou dando um exemplo “bobo”, mas a gente perde muito tempo documentando aquilo que não importa e procrastina naquilo que importa. Então, documente o que importa. Vamos seguir para o próximo vídeo. Eu quero mudar um pouquinho de assunto. Vamos falar sobre diagramas, documentar e criar diagramas.

