Bom, pessoal, no vídeo anterior eu dei um resumão, mas vamos tentar entender um pouquinho melhor o que são soluções cloud native. Seguinte, soluções cloud native são desenhadas para rodar em ambientes de cloud computing. Elas são desenhadas para tirar vantagens desses ambientes. Uma coisa é você criar uma aplicação, criar um serviço e jogar esse serviço na nuvem. Outra coisa é você já criar esse serviço pensando nos recursos de nuvem que você vai poder utilizar para potencializar o uso desse serviço. Entende a diferença? Então, essa é a ideia. Quando eu crio um serviço, quando eu crio alguma coisa, eu já crio pensando que isso vai rodar na nuvem de forma distribuída, de forma com alta disponibilidade, com forma de multi-cloud, na forma com multi-região e coisas desse tipo. 

Outro ponto importante, normalmente essas soluções são “modulares”, porque normalmente rodam de formas distribuídas. Elas se formam em máquinas diferentes, em nós diferentes e rodam em formatos de cluster. Ou seja, quando algo roda de forma distribuída na nuvem e essa distribuição, cada módulo, cada parte faz algo diferente, você consegue fazer com que a nuvem potencialize e mantenha alta disponibilidade, segurança e confiabilidade. Isso porque você sabe que se cai uma máquina, sobe outra. Se teve muito acesso, escala. E caso tenha muito acesso nesse módulo, escala só esse módulo. Então, é interessante a gente entender isso. 

Alguns exemplos de aplicações que são cloud native, só para gente chegar e falar “Wesley, do que você tá falando no final das contas?” O Docker é uma solução cloud native, porque com o Docker, no final do dia, você consegue ter containers rodando e containers runtime, ou seja, você pega um container, pode colocar em qualquer nuvem, em qualquer máquina, de qualquer lugar e você tem a aplicação rodando e se comportando da mesma forma. Já pensou nisso? Acredito que sim, mas olha só que ponto importante: esse Docker é uma solução cloud native. Outra solução cloud native que você já deve ter ouvido falar, mas essa é uma das principais que a gente vê hoje,  é o Kubernetes. O Kubernetes, só para você ter uma ideia, é conhecido hoje em dia como o sistema operacional da nuvem. Ou seja, se eu preciso de uma base para rodar, para escalar e para conseguir garantir alta disponibilidade, eu boto tudo isso para rodar em cima do Kubernetes. Então, eu tenho a minha nuvem e eu tenho o Kubernetes e as minhas aplicações rodando em cima do Kubernetes.

 O Kubernetes é um cluster com várias máquinas. Cada máquina vai respondendo para uma cabeça, um master. E esses negócios vão se expandindo, vão se comunicando e etc. Mas em cima do Kubernetes eu tenho o Helm, que é uma solução cloud native que você consegue fazer instalação de módulos e etc no Kubernetes. Além disso, eu tenho o Istio, que é um serviço de service mesh que roda em cima do Kubernetes. Tenho o Linkerd, que também é um service mesh em cima do Kubernetes. E eu tenho o Envoy, que é um  sistema de proxy, que inclusive é usado pelo Istio para rodar em cima do Kubernetes.

 Então,  outra coisa interessante, é o Apache Kafka, que é um sistema de streaming de dados onde conseguimos rodar de forma distribuída em diversas zonas de disponibilidade, que sai em diversas regiões, com uma altíssima performance, e você inclusive tem serviços gerenciados da própria Confluent, da AWS, por exemplo. Assim, você tem esses tipos de serviços. 

Outro serviço interessante é o Prometheus. Falamos de Prometheus na parte de observabilidade, mas podemos colocar aqui também, por ser um serviço também de alta disponibilidade. O Open Telemetry, também é outra solução cloud native que a gente tem que entender. Então, esses são pontos extremamente importantes para vocês entenderem que essas soluções foram criadas em um momento pós-cloud, ou seja, em determinado momento teve a cloud e essas soluções nasceram. 

A AWS Lambda, por exemplo,tem funções, como serviços, que você só consegue rodar, de forma geral, porque elas já nasceram prontas para rodar em ambiente cloud. Então, vemos como é importante a gente entender que as soluções cloud native vieram para rodar na cloud e o mais importante, independente de qual cloud, obviamente que eu falei a AWS Lambda, mas você vai ver que tem as functions e etc. com clouds correlatas, tem serviços que são correlatos em diferentes clouds. Mas pense o seguinte, o Kubernetes, eu rodo da mesma forma na AWS,  na Google ou na Azure, ou seja, os mesmos deployments que eu uso vão funcionar em qualquer lugar, porque é uma solução cloud native para a gente.

Outra solução que veio de cloud native, por exemplo, é o Argo CD, para você fazer deployments utilizando GitOps. Esse é um conceito muito interessante, onde você pega os seus manifestos de aplicações de um Kubernetes e toda vez que você fizer um deployment você muda esse Argo. Ele fica olhando o que aquele repositório Git seu alterou e  aplica essas mudanças para você. Outra coisa seguinte e muito forte, é a grande gama dos produtos da HashiCorp, HashiCorp Vault para os serviços de Secret Management, Consul, Service Mesh, Service Discovery, Terraform para aprovisionamento em nuvem.

 Portanto, tudo isso são soluções cloud native, que hoje em dia é a coisa mais comum da gente trabalhar. Só para vocês terem uma ideia, aqui dentro mesmo não sendo uma Microsoft da vida, mas a gente usa Docker,  Kubernetes, Helm, o Istio. Porém, não usamos o Apache Kafka, porque usamos o Prometheus,  o Open Telemetry, o AWS Lambda,  o Argo CD e o Terraform.  Ou seja, veja como a gente acaba utilizando tantos serviços cloud native no nosso dia a dia. Então, vamos nessa! Vamos continuar o jogo.